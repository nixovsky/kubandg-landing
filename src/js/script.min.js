"use strict";function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var o=0;o<t.length;o++){var i=t[o];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,_toPropertyKey(i.key),i)}}function _createClass(e,t,o){return t&&_defineProperties(e.prototype,t),o&&_defineProperties(e,o),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toPropertyKey(e){var t=_toPrimitive(e,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var i=o.call(e,t||"default");if("object"!==_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}document.addEventListener("DOMContentLoaded",(function(){var e=document.querySelectorAll(".anim-el");console.log(e);var t=new IntersectionObserver((function(e,t){e.forEach((function(e){e.isIntersecting&&(console.log("element"),e.target.classList.add("load"),t.unobserve(e.target))}))}),{rootMargin:"0px 0px -50% 0px",threshold:0});e.forEach((function(e){t.observe(e)})),new(function(){function e(t,o){_classCallCheck(this,e),this._el="string"==typeof t?document.querySelector(t):t;this._config=Object.assign({alwaysOpen:!0,duration:350},o),this.addEventListener()}return _createClass(e,[{key:"addEventListener",value:function(){var e=this;this._el.addEventListener("click",(function(t){var o=t.target.closest(".accordion__header");if(o){if(!e._config.alwaysOpen){var i=e._el.querySelector(".accordion__item_show");i&&i!==o.parentElement&&e.toggle(i)}e.toggle(o.parentElement)}}))}},{key:"show",value:function(e){var t=e.querySelector(".accordion__body");if(!t.classList.contains("collapsing")&&!e.classList.contains("accordion__item_show")){t.style.display="block";var o=t.offsetHeight;t.style.height=0,t.style.overflow="hidden",t.style.transition="height ".concat(this._config.duration,"ms ease"),t.classList.add("collapsing"),e.classList.add("accordion__item_slidedown"),t.offsetHeight,t.style.height="".concat(o,"px"),window.setTimeout((function(){t.classList.remove("collapsing"),e.classList.remove("accordion__item_slidedown"),t.classList.add("collapse"),e.classList.add("accordion__item_show"),t.style.display="",t.style.height="",t.style.transition="",t.style.overflow=""}),this._config.duration)}}},{key:"hide",value:function(e){var t=e.querySelector(".accordion__body");!t.classList.contains("collapsing")&&e.classList.contains("accordion__item_show")&&(t.style.height="".concat(t.offsetHeight,"px"),t.offsetHeight,t.style.display="block",t.style.height=0,t.style.overflow="hidden",t.style.transition="height ".concat(this._config.duration,"ms ease"),t.classList.remove("collapse"),e.classList.remove("accordion__item_show"),t.classList.add("collapsing"),window.setTimeout((function(){t.classList.remove("collapsing"),t.classList.add("collapse"),t.style.display="",t.style.height="",t.style.transition="",t.style.overflow=""}),this._config.duration))}},{key:"toggle",value:function(e){e.classList.contains("accordion__item_show")?this.hide(e):this.show(e)}}]),e}())(document.querySelector(".accordion"),{alwaysOpen:!0}),document.querySelectorAll(".form__input").forEach((function(e){e.addEventListener("change",(function(){""!=e.value?e.classList.add("valid"):e.classList.remove("valid")}))}));var o=document.querySelectorAll(".popup-btn"),i=document.querySelector(".modal-form");o.forEach((function(e){e.addEventListener("click",(function(){document.body.style.overflow="hidden",i.classList.add("open")}))}))}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
